# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from flask import Flask, jsonify, request
import requests

app = Flask(__name__)

POKEAPI_BASE_URL = "https://pokeapi.co/api/v1"
pokemon_data = {}


class Ui_MainWindow(object):
    pokemon_type_colors = {
        "Normal": "#A8A77A",
        "Fire": "#EE8130",
        "Water": "#6390F0",
        "Electric": "#F7D02C",
        "Grass": "#7AC74C",
        "Ice": "#96D9D6",
        "Fighting": "#C22E28",
        "Poison": "#A33EA1",
        "Ground": "#E2BF65",
        "Flying": "#A98FF3",
        "Psychic": "#F95587",
        "Bug": "#A6B91A",
        "Rock": "#B6A136",
        "Ghost": "#735797",
        "Dragon": "#6F35FC",
        "Dark": "#705746",
        "Steel": "#B7B7CE",
        "Fairy": "#D685AD"
    }

    current_PokemonID = 1
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 850)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet(
            "QMainWindow {\n"
            "    background: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, \n"
            "                                stop:0 #000000,  /*Top */\n"
            "                                stop:0.5 #1C1B1A,   /* Center */\n"
            "                                stop:1 #383633);       /* Buttom */\n"
            "}"
        )
        MainWindow.setAnimated(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.justPB = QtWidgets.QPushButton(self.centralwidget)
        self.justPB.setEnabled(True)
        self.justPB.setGeometry(QtCore.QRect(40, -50, 320, 400))
        self.justPB.setStyleSheet(
            "QPushButton#justPB {\n"
            "    border-radius: 30px;\n"
            "    background: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, \n"
            "                                stop:0 #7AC74C,\n"
            "                                stop:1 #A33EA1);\n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}"
        )
        self.justPB.setText("")
        self.justPB.setObjectName("justPB")

        self.lbl_CurrentPokemon = QtWidgets.QLabel(self.centralwidget)
        self.lbl_CurrentPokemon.setGeometry(QtCore.QRect(50, 30, 300, 300))
        self.lbl_CurrentPokemon.setText("")
        self.lbl_CurrentPokemon.setPixmap(QtGui.QPixmap("imagesHQ/001.png"))
        self.lbl_CurrentPokemon.setScaledContents(True)
        self.lbl_CurrentPokemon.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_CurrentPokemon.setObjectName("lbl_CurrentPokemon")

        self.lbl_PokemonName = QtWidgets.QLabel(self.centralwidget)
        self.lbl_PokemonName.setGeometry(QtCore.QRect(25, 360, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_PokemonName.setFont(font)
        self.lbl_PokemonName.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_PokemonName.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_PokemonName.setObjectName("lbl_PokemonName")
        
        self.btn_Type1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Type1.setGeometry(QtCore.QRect(50, 420, 100, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btn_Type1.setFont(font)
        self.btn_Type1.setStyleSheet(
            "QPushButton#btn_Type1 {\n"
            "    border-radius: 15px;\n"
            "    background-color: #7AC74C; \n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}"
        )
        self.btn_Type1.setObjectName("btn_Type1")

        self.btn_Type2 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Type2.setGeometry(QtCore.QRect(250, 420, 100, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btn_Type2.setFont(font)
        self.btn_Type2.setStyleSheet(
            "QPushButton#btn_Type2 {\n"
            "    border-radius: 15px;\n"
            "    background-color: purple; \n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}"
        )
        self.btn_Type2.setObjectName("btn_Type2")

        self.lbl_PokemonWeight = QtWidgets.QLabel(self.centralwidget)
        self.lbl_PokemonWeight.setGeometry(QtCore.QRect(50, 470, 100, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_PokemonWeight.setFont(font)
        self.lbl_PokemonWeight.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_PokemonWeight.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_PokemonWeight.setObjectName("lbl_PokemonWeight")
        self.lbl_PokemonHeight = QtWidgets.QLabel(self.centralwidget)
        self.lbl_PokemonHeight.setGeometry(QtCore.QRect(250, 470, 100, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_PokemonHeight.setFont(font)
        self.lbl_PokemonHeight.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_PokemonHeight.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_PokemonHeight.setObjectName("lbl_PokemonHeight")

        self.le_search = QtWidgets.QLineEdit(self.centralwidget)
        self.le_search.setGeometry(QtCore.QRect(125, 770, 150, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.le_search.setFont(font)
        self.le_search.setObjectName("le_search")

        self.lbl_JustWeight = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustWeight.setGeometry(QtCore.QRect(50, 505, 100, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_JustWeight.setFont(font)
        self.lbl_JustWeight.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustWeight.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_JustWeight.setObjectName("lbl_JustWeight")
        self.lbl_JustHeight = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustHeight.setGeometry(QtCore.QRect(250, 505, 100, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_JustHeight.setFont(font)
        self.lbl_JustHeight.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustHeight.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_JustHeight.setObjectName("lbl_JustHeight")

        self.pb_Hp = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_Hp.setGeometry(QtCore.QRect(60, 570, 290, 20))
        self.pb_Hp.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #FF6B6B; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_Hp.setMaximum(700)
        self.pb_Hp.setProperty("value", 45)
        self.pb_Hp.setTextVisible(False)
        self.pb_Hp.setFormat("")
        self.pb_Hp.setObjectName("pb_Hp")

        self.pb_Attack = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_Attack.setGeometry(QtCore.QRect(60, 600, 290, 20))
        self.pb_Attack.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #F9A825; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_Attack.setMaximum(460)
        self.pb_Attack.setProperty("value", 49)
        self.pb_Attack.setTextVisible(False)
        self.pb_Attack.setFormat("")
        self.pb_Attack.setObjectName("pb_Attack")

        self.lbl_JustHp = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustHp.setGeometry(QtCore.QRect(10, 570, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustHp.setFont(font)
        self.lbl_JustHp.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustHp.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustHp.setObjectName("lbl_JustHp")

        self.lbl_JustAtk = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustAtk.setGeometry(QtCore.QRect(10, 600, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustAtk.setFont(font)
        self.lbl_JustAtk.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustAtk.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustAtk.setObjectName("lbl_JustAtk")

        self.pb_Defense = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_Defense.setGeometry(QtCore.QRect(60, 630, 290, 20))
        self.pb_Defense.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #42A5F5; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_Defense.setMaximum(460)
        self.pb_Defense.setProperty("value", 49)
        self.pb_Defense.setTextVisible(False)
        self.pb_Defense.setFormat("")
        self.pb_Defense.setObjectName("pb_Defense")

        self.pb_SpAttack = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_SpAttack.setGeometry(QtCore.QRect(60, 660, 290, 20))
        self.pb_SpAttack.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #AB47BC; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_SpAttack.setMaximum(460)
        self.pb_SpAttack.setProperty("value", 65)
        self.pb_SpAttack.setTextVisible(False)
        self.pb_SpAttack.setFormat("")
        self.pb_SpAttack.setObjectName("pb_SpAttack")

        self.pb_SpDefense = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_SpDefense.setGeometry(QtCore.QRect(60, 690, 290, 20))
        self.pb_SpDefense.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #66BB6A; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_SpDefense.setMaximum(460)
        self.pb_SpDefense.setProperty("value", 65)
        self.pb_SpDefense.setTextVisible(False)
        self.pb_SpDefense.setFormat("")
        self.pb_SpDefense.setObjectName("pb_SpDefense")

        self.pb_Speed = QtWidgets.QProgressBar(self.centralwidget)
        self.pb_Speed.setGeometry(QtCore.QRect(60, 720, 290, 20))
        self.pb_Speed.setStyleSheet(
            "QProgressBar {\n"
            "    border: 1px solid #000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E0E0E0; /* Neutral background */\n"
            "}\n"
            "QProgressBar::chunk {\n"
            "    background-color: #FF7043; /* Stat color */\n"
            "    border-radius: 5px;\n"
            "}"
        )
        self.pb_Speed.setMaximum(460)
        self.pb_Speed.setProperty("value", 45)
        self.pb_Speed.setTextVisible(False)
        self.pb_Speed.setFormat("")
        self.pb_Speed.setObjectName("pb_Speed")

        self.lbl_JustDef = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustDef.setGeometry(QtCore.QRect(10, 630, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustDef.setFont(font)
        self.lbl_JustDef.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustDef.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustDef.setObjectName("lbl_JustDef")

        self.lbl_JustSpAtk = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustSpAtk.setGeometry(QtCore.QRect(10, 660, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustSpAtk.setFont(font)
        self.lbl_JustSpAtk.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustSpAtk.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustSpAtk.setObjectName("lbl_JustSpAtk")

        self.lbl_JustSpDef = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustSpDef.setGeometry(QtCore.QRect(10, 690, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustSpDef.setFont(font)
        self.lbl_JustSpDef.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustSpDef.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustSpDef.setObjectName("lbl_JustSpDef")

        self.lbl_JustSpeed = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustSpeed.setGeometry(QtCore.QRect(10, 720, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustSpeed.setFont(font)
        self.lbl_JustSpeed.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustSpeed.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustSpeed.setObjectName("lbl_JustSpeed")

        self.lbl_Hp = QtWidgets.QLabel(self.centralwidget)
        self.lbl_Hp.setGeometry(QtCore.QRect(360, 570, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_Hp.setFont(font)
        self.lbl_Hp.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_Hp.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_Hp.setObjectName("lbl_Hp")

        self.lbl_Atk = QtWidgets.QLabel(self.centralwidget)
        self.lbl_Atk.setGeometry(QtCore.QRect(360, 600, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_Atk.setFont(font)
        self.lbl_Atk.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_Atk.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_Atk.setObjectName("lbl_Atk")
        self.lbl_Def = QtWidgets.QLabel(self.centralwidget)
        self.lbl_Def.setGeometry(QtCore.QRect(360, 630, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_Def.setFont(font)
        self.lbl_Def.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_Def.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_Def.setObjectName("lbl_Def")

        self.lbl_SpAtk = QtWidgets.QLabel(self.centralwidget)
        self.lbl_SpAtk.setGeometry(QtCore.QRect(360, 660, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_SpAtk.setFont(font)
        self.lbl_SpAtk.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_SpAtk.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_SpAtk.setObjectName("lbl_SpAtk")

        self.lbl_SpDef = QtWidgets.QLabel(self.centralwidget)
        self.lbl_SpDef.setGeometry(QtCore.QRect(360, 690, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_SpDef.setFont(font)
        self.lbl_SpDef.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_SpDef.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_SpDef.setObjectName("lbl_SpDef")
        
        self.lbl_Speed = QtWidgets.QLabel(self.centralwidget)
        self.lbl_Speed.setGeometry(QtCore.QRect(360, 720, 50, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_Speed.setFont(font)
        self.lbl_Speed.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_Speed.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_Speed.setObjectName("lbl_Speed")

        self.lbl_PokemonID = QtWidgets.QLabel(self.centralwidget)
        self.lbl_PokemonID.setGeometry(QtCore.QRect(60, 0, 81, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_PokemonID.setFont(font)
        self.lbl_PokemonID.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_PokemonID.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_PokemonID.setObjectName("lbl_PokemonID")

        self.lbl_JustSearchLabel = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustSearchLabel.setGeometry(QtCore.QRect(100, 750, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_JustSearchLabel.setFont(font)
        self.lbl_JustSearchLabel.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustSearchLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_JustSearchLabel.setObjectName("lbl_JustSearchLabel")

        self.btn_Search = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.pressed_btn_Search())
        self.btn_Search.setGeometry(QtCore.QRect(150, 800, 100, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btn_Search.setFont(font)
        self.btn_Search.setStyleSheet(
            "QPushButton {\n"
            "    border-radius: 9px;\n"
            "    background-color: yellow; \n"
            "    padding: 10px; \n"
            "    color: black;\n"
            "}\n"
            "QPushButton:hover {\n"
            "    background-color: blue; \n"
            "    color: white;\n"
            "}\n"
            ""
        )
        self.btn_Search.setObjectName("btn_Search")

        self.btn_Prev = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.pressed_btn_Prev())
        self.btn_Prev.setGeometry(QtCore.QRect(40, 770, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.btn_Prev.setFont(font)
        self.btn_Prev.setStyleSheet(
            "QPushButton {\n"
            "    border-radius: 10px;\n"
            "    background-color: gray; \n"
            "    padding: 10px; \n"
            "    color: black;\n"
            "}\n"
            "QPushButton:hover {\n"
            "    background-color: blue; \n"
            "    color: white;\n"
            "}\n"
            ""
        )
        self.btn_Prev.setObjectName("btn_Prev")

        self.btn_Next = QtWidgets.QPushButton(self.centralwidget, clicked= lambda: self.pressed_btn_Next())
        self.btn_Next.setGeometry(QtCore.QRect(300, 770, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.btn_Next.setFont(font)
        self.btn_Next.setStyleSheet(
            "QPushButton {\n"
            "    border-radius: 10px;\n"
            "    background-color: gray; \n"
            "    padding: 10px; \n"
            "    color: black;\n"
            "}\n"
            "QPushButton:hover {\n"
            "    background-color: blue; \n"
            "    color: white;\n"
            "}\n"
            ""
        )
        self.btn_Next.setObjectName("btn_Next")

        self.lbl_JustAbilities = QtWidgets.QLabel(self.centralwidget)
        self.lbl_JustAbilities.setGeometry(QtCore.QRect(10, 540, 60, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_JustAbilities.setFont(font)
        self.lbl_JustAbilities.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_JustAbilities.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_JustAbilities.setObjectName("lbl_JustAbilities")

        self.lbl_Abilities = QtWidgets.QLabel(self.centralwidget)
        self.lbl_Abilities.setGeometry(QtCore.QRect(75, 540, 300, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_Abilities.setFont(font)
        self.lbl_Abilities.setStyleSheet("QLabel {\n" "    color: white;\n" "}")
        self.lbl_Abilities.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter
        )
        self.lbl_Abilities.setObjectName("lbl_Abilities")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 400, 21))
        self.menubar.setObjectName("menubar")

        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(
            _translate("MainWindow", "Pokedex API by KennyNeutron")
        )
        self.lbl_PokemonName.setText(_translate("MainWindow", "Bulbasaur"))
        self.btn_Type1.setText(_translate("MainWindow", "GRASS"))
        self.btn_Type2.setText(_translate("MainWindow", "POISON"))
        self.lbl_PokemonWeight.setText(_translate("MainWindow", "6.9Kg"))
        self.lbl_PokemonHeight.setText(_translate("MainWindow", "0.7M"))
        self.lbl_JustWeight.setText(_translate("MainWindow", "Weight"))
        self.lbl_JustHeight.setText(_translate("MainWindow", "Height"))
        self.lbl_JustHp.setText(_translate("MainWindow", "HP"))
        self.lbl_JustAtk.setText(_translate("MainWindow", "Atk"))
        self.lbl_JustDef.setText(_translate("MainWindow", "Def"))
        self.lbl_JustSpAtk.setText(_translate("MainWindow", "SP Atk"))
        self.lbl_JustSpDef.setText(_translate("MainWindow", "SP Def"))
        self.lbl_JustSpeed.setText(_translate("MainWindow", "Speed"))
        self.lbl_Hp.setText(_translate("MainWindow", "45"))
        self.lbl_Atk.setText(_translate("MainWindow", "49"))
        self.lbl_Def.setText(_translate("MainWindow", "49"))
        self.lbl_SpAtk.setText(_translate("MainWindow", "65"))
        self.lbl_SpDef.setText(_translate("MainWindow", "65"))
        self.lbl_Speed.setText(_translate("MainWindow", "45"))
        self.lbl_PokemonID.setText(_translate("MainWindow", "#001"))
        self.lbl_JustSearchLabel.setText(
            _translate("MainWindow", "Enter Pokemon Name or ID")
        )
        self.btn_Search.setText(_translate("MainWindow", "SEARCH"))
        self.btn_Prev.setText(_translate("MainWindow", "PREV"))
        self.btn_Next.setText(_translate("MainWindow", "NEXT"))
        self.lbl_JustAbilities.setText(_translate("MainWindow", "Abilities:"))
        self.lbl_Abilities.setText(_translate("MainWindow", "overgrow, chlorophyl"))
    
    def pressed_btn_Prev(self):
        #print("pressed prev")
        self.current_PokemonID-=1
        if(self.current_PokemonID<1):
            self.current_PokemonID=905
        #print(f"pokemon to find: {self.current_PokemonID}")
        self.pokemon_data=get_pokemon_data(str(self.current_PokemonID))
        #print(self.pokemon_data)
        #print(f"got data of pokemon: {self.pokemon_data['name']}")
        self.update_PokeDetails()

    def pressed_btn_Next(self):
        #print("pressed next")
        self.current_PokemonID+=1
        if self.current_PokemonID>905:
            self.current_PokemonID=1
        #print(f"pokemon to find: {self.current_PokemonID}")
        self.pokemon_data=get_pokemon_data(str(self.current_PokemonID))
        #print(self.pokemon_data)
        #print(f"got data of pokemon: {self.pokemon_data['name']}")
        self.update_PokeDetails()

    def pressed_btn_Search(self): #remove this function later, this is only for testing
        #print(f"Searching for {self.le_search.text()}")
        self.pokemon_data=get_pokemon_data(self.le_search.text())
        self.current_PokemonID = int(self.pokemon_data['id'])
        #print(self.pokemon_data)
        #print(f"got data of pokemon: {self.pokemon_data['name']}")
        self.update_PokeDetails()
    
    def update_PokeDetails(self):
        self.lbl_PokemonName.setText(self.pokemon_data['name'].capitalize())
        self.update_DisplayID()
        self.update_Image()
        self.update_BioStats()
        self.update_Abilities()
        self.update_BaseStats()
        self.update_PokemonTypes()
        self.update_CanvasBG()
    
    def update_CanvasBG(self):
        if len(self.pokemon_data['types']) == 1:        
            self.justPB.setStyleSheet(
                "QPushButton#justPB {\n"
                "    border-radius: 30px;\n"
                f"    background: {self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]}; \n"
                "    padding: 10px; \n"
                "    color: white;\n"
                "}"
            )
        else:
            self.justPB.setStyleSheet(
                "QPushButton#justPB {\n"
                "    border-radius: 30px;\n"
                "    background: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, \n"
                f"                                stop:0 {self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]},\n"
                f"                                stop:1 {self.pokemon_type_colors[self.pokemon_data['types'][1].capitalize()]});\n"
                "    padding: 10px; \n"
                "    color: white;\n"
                "}"
            )
    def update_PokemonTypes(self):
        #print(f"type size: {len(self.pokemon_data['types'])}")
        if len(self.pokemon_data['types']) == 1:
            #print(f"the type1 color:{self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]}")
            self.btn_Type1.setStyleSheet("QPushButton#btn_Type1 {\n"
            "    border-radius: 15px;\n"
            f"    background-color: {self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]}; \n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}")
            self.btn_Type1.setText(self.pokemon_data['types'][0].upper())
            self.btn_Type2.hide()
        else:
            self.btn_Type2.show()
            #print(f"the type1 color:{self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]}")
            #print(f"the type2 color:{self.pokemon_type_colors[self.pokemon_data['types'][1].capitalize()]}")
            self.btn_Type1.setText(self.pokemon_data['types'][0].upper())
            self.btn_Type1.setStyleSheet("QPushButton#btn_Type1 {\n"
            "    border-radius: 15px;\n"
            f"    background-color: {self.pokemon_type_colors[self.pokemon_data['types'][0].capitalize()]}; \n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}")
            self.btn_Type2.setText(self.pokemon_data['types'][1].upper())
            self.btn_Type2.setStyleSheet("QPushButton#btn_Type2 {\n"
            "    border-radius: 15px;\n"
            f"    background-color: {self.pokemon_type_colors[self.pokemon_data['types'][1].capitalize()]}; \n"
            "    padding: 10px; \n"
            "    color: white;\n"
            "}")
        
    def update_BaseStats(self):
        self.lbl_Hp.setText(str(self.pokemon_data['base_stats']['hp']))
        self.pb_Hp.setValue(int(self.pokemon_data['base_stats']['hp']))
        self.lbl_Atk.setText(str(self.pokemon_data['base_stats']['attack']))
        self.pb_Attack.setValue(int(self.pokemon_data['base_stats']['attack']))
        self.lbl_Def.setText(str(self.pokemon_data['base_stats']['defense']))
        self.pb_Defense.setValue(int(self.pokemon_data['base_stats']['defense']))
        self.lbl_SpAtk.setText(str(self.pokemon_data['base_stats']['special_attack']))    
        self.pb_SpAttack.setValue(int(self.pokemon_data['base_stats']['special_attack']))
        self.lbl_SpDef.setText(str(self.pokemon_data['base_stats']['special_defense']))
        self.pb_SpDefense.setValue(int(self.pokemon_data['base_stats']['special_defense']))
        self.lbl_Speed.setText(str(self.pokemon_data['base_stats']['speed']))
        self.pb_Speed.setValue(int(self.pokemon_data['base_stats']['speed']))

    def update_Abilities(self):
        self.lbl_Abilities.setText(", ".join(self.pokemon_data['abilities']))

    def update_BioStats(self):
        self.lbl_PokemonWeight.setText(f"{self.pokemon_data['weight']/10}Kg")
        self.lbl_PokemonHeight.setText(f"{self.pokemon_data['height']/10}M")

    def update_DisplayID(self):
        formatted_id = "{:03d}".format(self.pokemon_data['id'])
        self.lbl_PokemonID.setText(f"# {formatted_id}")

    def update_Image(self):
        which_img = "{:03d}".format(self.pokemon_data['id'])
        #print(f"image path: imagesHQ/{which_img}.png")
        self.lbl_CurrentPokemon.setPixmap(QtGui.QPixmap(f"imagesHQ/{which_img}.png"))

#API CODE STARTS HERE
#====================================================================================================================
@app.route('/')
def home():
    return "Welcome to the Pokémon API app!"

@app.route('/pokemon/<name>')
def get_pokemon(name):
    response = requests.get(f"{POKEAPI_BASE_URL}/pokemon/{name.lower()}")
    
    if response.status_code == 200:
        data = response.json()
        pokemon_data = {
            "id": data["id"],
            "name": data["name"],
            "height": data["height"],
            "weight": data["weight"],
            "abilities": [ability["ability"]["name"] for ability in data["abilities"]],
            "types": [ptype["type"]["name"] for ptype in data["types"]]
        }
        return jsonify(pokemon_data)
    else:
        return jsonify({"error": "Pokémon not found"}), 404

def get_pokemon_data(name):
    response = requests.get(f"{POKEAPI_BASE_URL}/pokemon/{name.lower()}")
    
    if response.status_code == 200:
        data = response.json()
        pokemon_data = {
            "id": data["id"],
            "name": data["name"],
            "height": data["height"],
            "weight": data["weight"],
            "base_stats": {
                "hp": data["stats"][0]["base_stat"],
                "attack": data["stats"][1]["base_stat"],
                "defense": data["stats"][2]["base_stat"],
                "special_attack": data["stats"][3]["base_stat"],
                "special_defense": data["stats"][4]["base_stat"],
                "speed": data["stats"][5]["base_stat"],
            },
            "abilities": [ability["ability"]["name"] for ability in data["abilities"]],
            "types": [ptype["type"]["name"] for ptype in data["types"]]
        }
        return pokemon_data
    else:
        return {"error": "Pokémon not found"}
#====================================================================================================================
#API CODE ENDS HERE

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
